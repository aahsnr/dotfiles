#!/bin/bash

##.1
cfdisk /dev/nvme0n1 &&
  mkfs.vfat -F 32 /dev/nvme0n1p1 &&
  mkfs.ext4 -c -L boot -m 0 /dev/nvme0n1p2 &&
  cryptsetup luksFormat --key-size 512 --type luks2 /dev/nvme0n1p3 &&
  cryptsetup luksOpen /dev/nvme0n1p3 cryptroot &&
  mkfs.btrfs -L rootfs /dev/mapper/cryptroot && 
  mount /dev/mapper/cryptroot /mnt
  
  # pvcreate /dev/mapper/cryptroot &&
  # vgcreate debian-vg /dev/mapper/cryptroot && 
  # lvcreate -l +100%FREE debian-vg -n root &&

cfdisk /dev/nvme0n1 &&
  mkfs.vfat -F 32 /dev/nvme0n1p1 &&
  cryptsetup luksFormat --key-size 512 --type luks2 /dev/nvme0n1p2 &&
  cryptsetup luksOpen /dev/nvme0n1p2 cryptroot &&
  mkfs.btrfs -L rootfs /dev/mapper/cryptroot && 
  mount /dev/mapper/cryptroot /mnt


btrfs su cr /mnt/@ &&
  btrfs su cr /mnt/@home &&
  btrfs su cr /mnt/@opt &&
  btrfs su cr /mnt/@tmp &&
  btrfs su cr /mnt/@srv &&
  btrfs su cr /mnt/@nix &&
  btrfs su cr /mnt/@usr@local &&
  btrfs su cr /mnt/@var && 
  btrfs su cr /mnt/@var@cache && 
  btrfs su cr /mnt/@var@crash &&
  btrfs su cr /mnt/@var@log && 
  btrfs su cr /mnt/@var@log@audit &&
  btrfs su cr /mnt/@var@tmp &&
  btrfs su cr /mnt/@var@spool &&
  btrfs su cr /mnt/@snapshots && 
  umount /mnt 


mount -o noatime,compress=zstd:3,space_cache=v2,discard=async,subvol=@ /dev/mapper/cryptroot /mnt &&
  mkdir /mnt/home &&
  mount -o noatime,compress=zstd:3,space_cache=v2,discard=async,subvol=@home /dev/mapper/cryptroot /mnt/home &&
  mkdir /mnt/opt &&
  mount -o noatime,compress=zstd:3,space_cache=v2,discard=async,subvol=@opt /dev/mapper/cryptroot /mnt/opt && 
  mkdir /mnt/tmp &&
  mount -o noatime,compress=zstd:3,space_cache=v2,discard=async,subvol=@tmp /dev/mapper/cryptroot /mnt/tmp &&
  mkdir /mnt/srv &&
  mount -o noatime,compress=zstd:3,space_cache=v2,discard=async,subvol=@srv /dev/mapper/cryptroot /mnt/srv &&
  mkdir /mnt/nix &&
  mount -o noatime,compress=zstd:3,space_cache=v2,discard=async,subvol=@nix /dev/mapper/cryptroot /mnt/nix &&
  mkdir -p /mnt/usr/local &&
  mount -o noatime,compress=zstd:3,space_cache=v2,discard=async,subvol=@usr@local /dev/mapper/cryptroot /mnt/usr/local &&    
  mkdir /mnt/var && 
  mount -o noatime,compress=zstd:3,space_cache=v2,discard=async,subvol=@var /dev/mapper/cryptroot /mnt/var &&
  mkdir /mnt/var/cache && 
  mount -o noatime,compress=zstd:3,space_cache=v2,discard=async,subvol=@var@cache /dev/mapper/cryptroot /mnt/var/cache &&
  mkdir /mnt/var/crash && 
  mount -o noatime,compress=zstd:3,space_cache=v2,discard=async,subvol=@var@crash /dev/mapper/cryptroot /mnt/var/crash &&
  mkdir /mnt/var/log && 
  mount -o noatime,compress=zstd:3,space_cache=v2,discard=async,subvol=@var@log /dev/mapper/cryptroot /mnt/var/log && 
  mkdir /mnt/var/log/audit && 
  mount -o noatime,compress=zstd:3,space_cache=v2,discard=async,subvol=@var@log@audit /dev/mapper/cryptroot /mnt/var/log/audit && 
  mkdir /mnt/var/tmp  && 
  mount -o noatime,compress=zstd:3,space_cache=v2,discard=async,subvol=@var@tmp /dev/mapper/cryptroot /mnt/var/tmp &&
  mkdir /mnt/var/spool  && 
  mount -o noatime,compress=zstd:3,space_cache=v2,discard=async,subvol=@var@tmp /dev/mapper/cryptroot /mnt/var/spool &&
  mkdir /mnt/.snapshots && 
  mount -o noatime,compress=zstd:3,space_cache=v2,discard=async,subvol=@snapshots /dev/mapper/cryptroot /mnt/.snapshots  

### DEBIAN SETUP

debootstrap --arch amd64 trixie /mnt

cp -R /etc/mtab /mnt/etc/mtab

apt install arch-install-scripts

sudo cp -R $HOME/.dots/debian-scripts/preconfig_files/testing.sources /mnt/etc/apt/sources.list.d/ &&
  sudo cp -R $HOME/.dots/debian-scripts/preconfig_files/unstable.sources /mnt/etc/apt/sources.list.d/ &&
  sudo cp -R $HOME/.dots/debian-scripts/preconfig_files/01norecommend /mnt/etc/apt/apt.conf.d &&
  sudo cp -R $HOME/.dots/debian-scripts/preconfig_files/debian-pinning /mnt/etc/apt/preferences.d &&
  sudo cp -R $HOME/.dots/debian-scripts/preconfig_files/variables.sh /mnt/etc/profile.d &&
  sudo rm -rf /mnt/etc/apt/sources.list 

mount -o bind /dev /mnt/dev &&
  mount -o bind /dev/pts /mnt/dev/pts &&
  mount -o bind /proc /mnt/proc &&
  mount -o bind /sys /mnt/sys 

chroot /mnt /bin/bash

arch-chroot /mnt

mkdir boot/  &&
  mount /dev/nvme0n1p2 /boot &&
  mkdir boot/efi &&
  mount /dev/nvme0n1p1 /boot/efi

genfstab -U / > /etc/fstab

apt update && apt install wget gnupg bash ca-certificates firmware-linux sudo zstd btrfs-progs network-manager vim software-properties-common console-setup pkg-config linux-image-amd64 linux-headers-amd64 grub-efi-amd64 locales debian-keyring ca-certificates dracut cryptsetup btrfs-progs

# wget https://archive.kali.org/archive-key.asc -O /etc/apt/trusted.gpg.d/kali-archive-keyring.asc &&
#   wget -qO- https://deb.parrotsec.org/parrot/misc/parrotsec.gpg | gpg --dearmor -o /etc/apt/trusted.gpg.d/parrot-archive-keyring.gpg
#
# sudo cp -R /home/ahsan/.dots/debian-scripts/preconfig_files/kali.list /mnt/etc/apt/sources.list.d/ && 
#   sudo cp -R /home/ahsan/.dots/debian-scripts/preconfig_files/parrot.list /mnt/etc/apt/sources.list.d/ && 
#   sudo cp -R /home/ahsan/.dots/debian-scripts/preconfig_files/kali-pinning /mnt/etc/apt/preferences.d/ && 
#   sudo rm -rf /mnt/etc/apt/sources.list && 
#   sudo rm -rf /mnt/etc/apt/sources.list.d/bookworm.sources

wget -qO - https://artifacts.elastic.co/GPG-KEY-elasticsearch | sudo gpg --dearmor -o /usr/share/keyrings/elasticsearch-keyring.gpg &&
  sudo apt-get install apt-transport-https &&
  echo "deb [signed-by=/usr/share/keyrings/elasticsearch-keyring.gpg] https://artifacts.elastic.co/packages/8.x/apt stable main" | sudo tee /etc/apt/sources.list.d/elastic-8.x.list

dpkg-reconfigure tzdata &&
  dpkg-reconfigure locales &&
  echo "zephyrus" > /etc/hostname

vim /etc/hosts
127.0.0.1    localhost
::1          localhost
127.0.1.1    zephyrus.localdomain zephyrus

vim /etc/network/interfaces
auto lo
iface lo inet loopback
auto eth0
iface eth0 inet dhcp

useradd ahsan -c "Ahsanur Rahman" -m -G users,sudo,audio,video -s /bin/bash && passwd ahsan 
sudo su ahsan


# dracut setup
sudo vim /etc/dracut.conf
hostonly="yes"
compress="zstd"
add_dracutmodules+=" crypt dm rootfs-block "
omit_dracutmodules+=" network cifs nfs nbd brltty "
force_drivers+=" btrfs "

sudo apt reinstall linux-image-amd64 linux-headers-amd64

sudo dracut -vf --kver '6.11.6-amd64'

dpkg --list | egrep -i --color 'linux-image|linux-headers'

nvim /etc/default/grub
GRUB_CMDLINE_LINUX="quiet loglevel=0 nvidia-drm.modeset=1 rootfstype=btrfs rootflags=rw"
GRUB_CMDLINE_LINUX_DEFAULT="apparmor=1 security=apparmor" 
GRUB_ENABLE_CRYPTODISK=y

sudo grub-install --target=x86_64-efi --efi-directory=/boot/efi && sudo grub-install --target=x86_64-efi --efi-directory=/boot/efi --removable && update-grub

# parrot-packages
# TODO parrot-menu for consideration
#sudo apt install parrot-core-lite base-files parrot-drivers parrot-themes


# kali packages
# TODO kali-menu for consideration
#sudo apt install desktop-base kali-menu

# kali packages
# TODO parrot-menu for consideration
#sudo apt install base-files 
  

### POST INSTALL
## setup snapper
sudo umount /.snapshots/ && sudo rm -r /.snapshots/ && sudo snapper -c root create-config / && sudo btrfs subvolume delete /.snapshots && sudo mkdir /.snapshots && sudo mount -a && sudo chmod 750 /.snapshots && sudo lvim /etc/snapper/configs/root && sudo systemctl enable --now snapper-timeline.timer && sudo systemctl enable --now snapper-cleanup.timer && yay -S snap-pac-grub snapper-gui && sudo mkdir /etc/pacman.d/hooks && sudo lvim /etc/pacman.d/hooks/50-bootbackup.hook

[Trigger]
Operation = Upgrade
Operation = Install
Operation = Remove
Type = Path
Target = boot/*

[Action]
Depends = rsync
Description = Backing up /boot...
When = PreTransaction
Exec = /usr/bin/rsync -a --delete /boot /.bootbackup

##.D Sysctl
sudo nvim /etc/sysctl.d/harden.conf
kernel.kptr_restrict=2
kernel.dmesg_restrict=1
kernel.printk=3 3 3 3
kernel.unprivileged_bpf_disabled=1
net.core.bpf_jit_harden=2
dev.tty.ldisc_autoload=0
vm.unprivileged_userfaultfd=0
kernel.kexec_load_disabled=1
kernel.sysrq=4
kernel.unprivileged_userns_clone=0
kernel.perf_event_paranoid=3
net.ipv4.tcp_syncookies=1
net.ipv4.tcp_rfc1337=1
net.ipv4.conf.all.rp_filter=1
net.ipv4.conf.default.rp_filter=1
net.ipv4.conf.all.accept_redirects=0
net.ipv4.conf.default.accept_redirects=0
net.ipv4.conf.all.secure_redirects=0
net.ipv4.conf.default.secure_redirects=0
net.ipv6.conf.all.accept_redirects=0
net.ipv6.conf.default.accept_redirects=0
net.ipv4.conf.all.send_redirects=0
net.ipv4.conf.default.send_redirects=0
net.ipv4.icmp_echo_ignore_all=1
net.ipv4.conf.all.accept_source_route=0
net.ipv4.conf.default.accept_source_route=0
net.ipv6.conf.all.accept_source_route=0
net.ipv6.conf.default.accept_source_route=0
net.ipv6.conf.all.accept_ra=0
net.ipv6.conf.default.accept_ra=0
net.ipv4.tcp_sack=0
net.ipv4.tcp_dsack=0
net.ipv4.tcp_fack=0
kernel.yama.ptrace_scope=2
vm.mmap_rnd_bits=32
vm.mmap_rnd_compat_bits=16
fs.protected_symlinks=1
fs.protected_hardlinks=1
fs.protected_fifos=2
fs.protected_regular=2

##.D Issue
-- WARNING -- This system is for the use of authorized users only. Individuals 
using this computer system without authority or in excess of their authority 
are subject to having all their activities on this system monitored and 
recorded by system personnel. Anyone using this system expressly consents to 
such monitoring and is advised that if such monitoring reveals possible 
evidence of criminal activity system personal may provide the evidence of such 
monitoring to law enforcement officials.

# Hyprland commands
hyprctl clients

##.E Post-install chroot
cryptsetup luksOpen /dev/nvme0n1p2 cryptroot &&
  mount -o noatime,compress=zstd:3,space_cache=v2,discard=async,subvol=@ /dev/mapper/cryptroot /mnt &&
  mount -o noatime,compress=zstd:3,space_cache=v2,discard=async,subvol=@home /dev/mapper/cryptroot /mnt/home &&
  mount -o noatime,compress=zstd:3,space_cache=v2,discard=async,subvol=@opt /dev/mapper/cryptroot /mnt/opt && 
  mount -o noatime,compress=zstd:3,space_cache=v2,discard=async,subvol=@tmp /dev/mapper/cryptroot /mnt/tmp &&
  mount -o noatime,compress=zstd:3,space_cache=v2,discard=async,subvol=@srv /dev/mapper/cryptroot /mnt/srv &&
  mount -o noatime,compress=zstd:3,space_cache=v2,discard=async,subvol=@nix /dev/mapper/cryptroot /mnt/nix &&
  mount -o noatime,compress=zstd:3,space_cache=v2,discard=async,subvol=@usr@local /dev/mapper/cryptroot /mnt/usr/local &&    
  mount -o noatime,compress=zstd:3,space_cache=v2,discard=async,subvol=@var /dev/mapper/cryptroot /mnt/var &&
  mount -o noatime,compress=zstd:3,space_cache=v2,discard=async,subvol=@var@cache /dev/mapper/cryptroot /mnt/var/cache &&
  mount -o noatime,compress=zstd:3,space_cache=v2,discard=async,subvol=@var@crash /dev/mapper/cryptroot /mnt/var/crash &&
  mount -o noatime,compress=zstd:3,space_cache=v2,discard=async,subvol=@var@log /dev/mapper/cryptroot /mnt/var/log && 
  mount -o noatime,compress=zstd:3,space_cache=v2,discard=async,subvol=@var@log@audit /dev/mapper/cryptroot /mnt/var/log/audit && 
  mount -o noatime,compress=zstd:3,space_cache=v2,discard=async,subvol=@var@tmp /dev/mapper/cryptroot /mnt/var/tmp &&
  mount -o noatime,compress=zstd:3,space_cache=v2,discard=async,subvol=@var@tmp /dev/mapper/cryptroot /mnt/var/spool &&
  mount -o noatime,compress=zstd:3,space_cache=v2,discard=async,subvol=@snapshots /dev/mapper/cryptroot /mnt/.snapshots  


chroot /mnt/gentoo /bin/bash
source /etc/profile
export PS1="(chroot) ${PS1}"

mount /dev/nvme0n1p1 /boot

## Misc
nvim /etc/modprobe.d/nvidia.conf
options nvidia-drm modeset=1 
options nvidia NVreg_UsePageAttributeTable=1


nvim /etc/modprobe.d/nvidia-power-management.conf
options nvidia NVreg_PreserveVideoMemoryAllocations=1 NVreg_TemporaryFilePath=/tmp

#scaling apps
--force-device-scale-factor=1.75 %U

grep 'app-emacs/' /var/lib/portage/world | xargs --open-tty emerge --ask --deselect; emerge --ask --depcleaneselect repository add brave-overlay git https://gitlab.com/jason.oliveira/brave-overlay.git

git config --global credential.helper /usr/bin/git-credential-libsecret


sudo chage --mindays 40 \
--maxdays 120 --warndays 30 ahsan

# chrome sandbox
sudo chown root:root chrome-sandbox
sudo chmod 4755 chrome-sandbox

sudo lvim /usr/share/gvfs/mounts/network.mount
AutoMount=false

 *   CONFIG_NF_CT_NETLINK_HELPER:	 is not set when it should be.
 *   CONFIG_NFT_OBJREF:	 is not set when it should be.

 *   CONFIG_PPP_DEFLATE:         missing Deflate compression (optional, but highly recommended)
 *   CONFIG_PPP_BSDCOMP:         missing BSD-Compress compression (optional, but highly recommended)

CONFIG_NF_CT_NETLINK_HELPER

# Install nvhpc
wget https://developer.download.nvidia.com/hpc-sdk/23.9/nvhpc_2023_239_Linux_x86_64_cuda_12.2.tar.gz
tar xpzf nvhpc_2023_239_Linux_x86_64_cuda_12.2.tar.gz
nvhpc_2023_239_Linux_x86_64_cuda_12.2/install

# Tinker9 installation
git clone --recurse-submodules https://github.com/TinkerTools/tinker9.git
cd tinker9 && mkdir build && cd build
cmake -DCMAKE_Fortran_COMPILER=gfortran -DCOMPUTE_CAPABILITY=70 ..
make -j22
make test

rustup-init-gentoo

** SECURITY **
/etc/security/limits.conf
*    soft core 0
*    hard core 0
*    hard nproc 15
*    hard rss 10000
*    -    maxlogins 2
@dev hard core 100000
@dev soft nproc 20
@dev hard nproc 35
@dev -    maxlogins 10
