#!/bin/bash
echo "Step 1"
cfdisk /dev/nvme0n1 &&
  export DISK_DEVICE='/dev/nvme0n1' &&
  sgdisk -n1::+512M -t1:EF00 -c1:'ESP' ${DISK_DEVICE} &&
  sgdisk -n2:: -t2:8300 -c2:'LINUX' ${DISK_DEVICE} &&
  sgdisk -p ${DISK_DEVICE}

export ESP_PRTN="$(fdisk -x ${DISK_DEVICE} |
  grep -i 'C12A7328-F81F-11D2-BA4B-00A0C93EC93B' |
  grep 'ESP' |
  cut -d' ' -f1)"

export LINUX_PRTN="$(fdisk -x ${DISK_DEVICE} |
  grep -i '0FC63DAF-8483-4772-8E79-3D69D8477DE4' |
  grep 'LINUX' |
  cut -d' ' -f1)"

echo ${ESP_PRTN} ${LINUX_PRTN}

#/dev/nvme0n1p1 /dev/nvme0n1p2

echo "Step 2"
cryptsetup luksFormat ${LINUX_PRTN} --type luks2 --label FEDORA_LUKS --pbkdf pbkdf2 --pbkdf-force-iterations 5000000 &&
  cryptsetup luksOpen ${LINUX_PRTN} tmpluks &&
  mkfs.fat -F 32 -n EFI ${ESP_PRTN} &&
  mkfs.btrfs -L FEDORA /dev/mapper/tmpluks

echo "Step 3"
udevadm trigger &&
  lsblk -po name,size,fstype,fsver,label,uuid ${DISK_DEVICE}

export LINUX_PRTN_LUKS_UUID="$(cryptsetup luksUUID ${LINUX_PRTN})" &&
  export VFAT_FS_UUID="$(lsblk -lnpo uuid ${ESP_PRTN})" &&
  export BTRFS_FS_UUID="$(lsblk -lnpo uuid /dev/mapper/tmpluks)" &&
  printf "${VFAT_FS_UUID}\n${LINUX_PRTN_LUKS_UUID}\n${BTRFS_FS_UUID}\n"

8E1D-3567
2cb2b26c-82cd-495d-a174-50e92e3c1b9b
ca228ef0-f533-49fd-845a-b891c38feab7

echo "Step 4"
mount /dev/mapper/tmpluks /mnt &&
  restorecon -vRF /mnt

echo "Step 5"

echo "Step 6"
btrfs su cr /mnt/@ &&
  btrfs su cr /mnt/@home &&
  btrfs su cr /mnt/@opt &&
  btrfs su cr /mnt/@srv &&
  btrfs su cr /mnt/@usr@local &&
  btrfs su cr /mnt/@var &&
  btrfs su cr /mnt/@var@cache &&
  btrfs su cr /mnt/@var@crash &&
  btrfs su cr /mnt/@var@log &&
  btrfs su cr /mnt/@var@log@audit &&
  btrfs su cr /mnt/@var@tmp &&
  btrfs su cr /mnt/@snapshots &&
  umount /mnt

echo "Step 7"
mount -o noatime,compress=zstd:3,space_cache=v2,discard=async,subvol=@ /dev/mapper/tmpluks /mnt &&
  mkdir /mnt/home &&
  mount -o noatime,compress=zstd:3,space_cache=v2,discard=async,subvol=@home /dev/mapper/tmpluks /mnt/home &&
  mkdir /mnt/opt &&
  mount -o noatime,compress=zstd:3,space_cache=v2,discard=async,subvol=@opt /dev/mapper/tmpluks /mnt/opt &&
  mkdir /mnt/srv &&
  mount -o noatime,compress=zstd:3,space_cache=v2,discard=async,subvol=@srv /dev/mapper/tmpluks /mnt/srv &&
  mkdir -vp /mnt/usr/local &&
  mount -o noatime,compress=zstd:3,space_cache=v2,discard=async,subvol=@usr@local /dev/mapper/tmpluks /mnt/usr/local &&
  mkdir /mnt/var &&
  mount -o noatime,compress=zstd:3,space_cache=v2,discard=async,subvol=@var /dev/mapper/tmpluks /mnt/var &&
  mkdir /mnt/var/cache &&
  mount -o noatime,compress=zstd:3,space_cache=v2,discard=async,subvol=@var@cache /dev/mapper/tmpluks /mnt/var/cache &&
  mkdir /mnt/var/crash &&
  mount -o noatime,compress=zstd:3,space_cache=v2,discard=async,subvol=@var@crash /dev/mapper/tmpluks /mnt/var/crash &&
  mkdir /mnt/var/log &&
  mount -o noatime,compress=zstd:3,space_cache=v2,discard=async,subvol=@var@log /dev/mapper/tmpluks /mnt/var/log &&
  mkdir /mnt/var/log/audit &&
  mount -o noatime,compress=zstd:3,space_cache=v2,discard=async,subvol=@var@log@audit /dev/mapper/tmpluks /mnt/var/log/audit &&
  mkdir /mnt/var/tmp &&
  mount -o noatime,compress=zstd:3,space_cache=v2,discard=async,subvol=@var@tmp /dev/mapper/tmpluks /mnt/var/tmp &&
  mkdir /mnt/.snapshots &&
  mount -o noatime,compress=zstd:3,space_cache=v2,discard=async,subvol=@snapshots /dev/mapper/tmpluks /mnt/.snapshots

mkdir -vp /mnt/boot/efi &&
  mount -v ${ESP_PRTN} /mnt/boot/efi

echo "Step 8"
btrfs subvolume list /mnt &&
  chmod -c 1777 /mnt/var/tmp

echo "Step 9"

dnf --releasever=40 --installroot=/mnt install -y --setopt=install_weak_deps=False basesystem btrfs-progs zstd

for dir in sys dev proc; do
  mount -v --rbind "/${dir}" "/mnt/${dir}"
  mount -v --make-rslave "/mnt/${dir}"
done

echo "Step 10"
dnf --releasever=40 --installroot=/mnt install --setopt=install_weak_deps=False @custom-environment kernel kernel-devel kernel-headers linux-firmware langpacks-en glibc-langpack-en shim-x64 grub2-efi-x64 grub2-common grub2-efi-x64-modules grub2-tools grub2-tools-efi grubby efibootmgr cracklib cracklib-dicts polkit finger cryptsetup systemd-networkd NetworkManager NetworkManager-wifi tpm2-tss tpm2-tools git-core make inotify-tools -y

echo "Step 11"
rm -vf /mnt/etc/resolv.conf &&
  cp -v /etc/resolv.conf /mnt/etc/ &&
  systemd-firstboot --root=/mnt \
    --locale=en_US.UTF-8 \
    --keymap=us \
    --timezone=Asia/Dhaka \
    --hostname=fedora \
    --setup-machine-id &&
  localectl list-locales &&
  localectl list-keymaps &&
  timedatectl list-timezones &&
  echo 'FONT=eurlatgr' >>/mnt/etc/vconsole.conf &&
  mkdir -vp /mnt/etc/X11/xorg.conf.d

echo "Step 12"
cat <<'EOF' >>/mnt/etc/X11/xorg.conf.d/00-keyboard.conf
Section "InputClass"
Identifier "system-keyboard"
MatchIsKeyboard "on"
Option "XkbLayout" "us"
EndSection
EOF

localectl list-x11-keymap-layouts
chroot /mnt /bin/bash
dnf clean all && dnf makecache

echo "Step 13"
dnf -y reinstall polkit &&
  useradd ahsan -m -c 'Ahsanur Rahman' -G wheel -s /bin/bash &&
  passwd ahsan &&
  finger ahsan

sed -i \
  -e "1i cryptomount -u ${LINUX_PRTN_LUKS_UUID//-/}" \
  -e '1i set btrfs_relative_path="yes"' \
  -e 's/ --root-dev-only//g' \
  /boot/efi/EFI/fedora/grub.cfg

efibootmgr -c -d ${DISK_DEVICE} \
  -p ${ESP_NO} \
  -L Fedora \
  -l "\EFI\fedora\grubx64.efi"
